var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _toIntegerIndexJs = require("../toInteger/index.js");
var _toIntegerIndexJsDefault = _parcelHelpers.interopDefault(_toIntegerIndexJs);
var _toDateIndexJs = require("../../toDate/index.js");
var _toDateIndexJsDefault = _parcelHelpers.interopDefault(_toDateIndexJs);
var _requiredArgsIndexJs = require("../requiredArgs/index.js");
var _requiredArgsIndexJsDefault = _parcelHelpers.interopDefault(_requiredArgsIndexJs);
function startOfUTCWeek(dirtyDate, dirtyOptions) {
  _requiredArgsIndexJsDefault.default(1, arguments);
  var options = dirtyOptions || ({});
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : _toIntegerIndexJsDefault.default(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : _toIntegerIndexJsDefault.default(options.weekStartsOn);
  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }
  var date = _toDateIndexJsDefault.default(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
exports.default = startOfUTCWeek;
